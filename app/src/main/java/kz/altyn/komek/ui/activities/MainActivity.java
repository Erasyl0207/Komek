package kz.altyn.komek.ui.activities;import android.annotation.SuppressLint;import android.content.Intent;import android.os.Bundle;import android.view.Menu;import android.view.MenuInflater;import android.widget.Button;import androidx.appcompat.app.AppCompatActivity;import androidx.appcompat.widget.Toolbar;import androidx.cardview.widget.CardView;import com.afollestad.materialdialogs.MaterialDialog;import kz.altyn.komek.ProductHelper;import kz.altyn.komek.R;import kz.altyn.komek.models.Package;import java.util.ArrayList;import java.util.List;import java.util.Objects;import java.util.Random;public class MainActivity extends AppCompatActivity {    private Button newDonorButton;    private Button newCharityButton;    private CardView charitableFoundationsCardView;    private CardView typesOfCharityCardView;    private CardView giveHelpCardView;    private Toolbar toolbar;    public static List<Package> allProductPackageList = new ArrayList<>();        @SuppressLint("SetTextI18n")    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        initUi();        setSupportActionBar(toolbar);        Objects.requireNonNull(getSupportActionBar()).setHomeAsUpIndicator(R.drawable.ic_baseline_search_24);// set drawable icon        getSupportActionBar().setDisplayHomeAsUpEnabled(true);        charitableFoundations();        typesOfCharity();        newCharity();        newDonor();        giveHelp();        allProductPackageList = new ProductHelper().initHelpPackage();    }    @Override    public boolean onCreateOptionsMenu(Menu menu) {        MenuInflater menuInflater = getMenuInflater();        menuInflater.inflate(R.menu.menu, menu);        return super.onCreateOptionsMenu(menu);    }    @Override    public void onBackPressed() {        new MaterialDialog.Builder(this)                .title("Shyǵý?")                .content("Siz senimdisizbe?")                .positiveText("Ia")                .canceledOnTouchOutside(false)                .cancelable(false)                .onPositive((dialog, which) -> MainActivity.this.finish())                .negativeText("Joq")                .show();    }    @Override    public void onResume() {        super.onResume();        //newDonor();    }    private void initUi() {        newDonorButton = findViewById(R.id.newDonor);        newCharityButton = findViewById(R.id.newCharity);        charitableFoundationsCardView = findViewById(R.id.charitable_foundations);        typesOfCharityCardView = findViewById(R.id.types_of_charity);        giveHelpCardView = findViewById(R.id.give_help);        toolbar = findViewById(R.id.toolbar);    }    private void charitableFoundations() {        charitableFoundationsCardView.setOnClickListener(view ->                startActivity(new Intent(getApplicationContext(), CharitiesList.class)));    }    private void typesOfCharity() {        typesOfCharityCardView.setOnClickListener(view -> {            //if (name != null) {                startActivity(new Intent(getApplicationContext(), CategoryActivity.class));            //} else {//                new MaterialDialog.Builder(MainActivity.this)//                        .title("You are not registered as a Donor")//                        .content("Become a Donor to Donate?")//                        .positiveText("Yes")//                        .negativeText("No")//                        .canceledOnTouchOutside(false)//                        .cancelable(false)//                        .onPositive((dialog, which) -> startActivity(new Intent(getApplicationContext(), NewDonorReg.class)))//                        .onNegative((dialog, which) -> {}).build().show();//            }        });    }    private void giveHelp() {        giveHelpCardView.setOnClickListener(view -> {            //if (name != null) {                startActivity(new Intent(getApplicationContext(), CharitiesList.class));//            } else {//                new MaterialDialog.Builder(MainActivity.this)//                        .title("You are not registered as a Donor")//                        .content("Become a Donor to Donate?")//                        .positiveText("Yes")//                        .negativeText("No")//                        .canceledOnTouchOutside(false)//                        .cancelable(false)//                        .onPositive((dialog, which) -> startActivity(new Intent(getApplicationContext(), NewDonorReg.class)))//                        .onNegative((dialog, which) -> {//                }).build().show();//            }        });    }    private void newCharity() {//        if (FirebaseAuth.getInstance().getCurrentUser() != null) {//            FirebaseDatabase.getInstance().getReference().child("Charities").child(FirebaseAuth.getInstance().getCurrentUser().getUid()).child("name").addValueEventListener(new ValueEventListener() {//                @Override//                public void onDataChange(@NonNull DataSnapshot snapshot) {//                    newCharityButton.setText("View Donations To " + snapshot.getValue());//                    newCharityButton.setOnClickListener(view -> startActivity(new Intent(getApplicationContext(), CharityActivity.class)));//                }////                @Override//                public void onCancelled(DatabaseError databaseError) {////                }//            });//        } else {            newCharityButton.setText("Qayırımdılıqtı tirkeñiz");            newCharityButton.setOnClickListener(view -> startActivity(new Intent(getApplicationContext(), NewCharityReg.class)));//        }    }    private void newDonor() {        //if (name != null) {         //   newDonorButton.setText("Donating as " + name);        //    newDonorButton.setEnabled(false);       // } else {            newDonorButton.setOnClickListener(view -> startActivity(new Intent(getApplicationContext(), NewDonorReg.class)));        //}    }    public static String getRandomString() {        String SALTCHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZ123456789";        StringBuilder salt = new StringBuilder();        Random rnd = new Random();        while (salt.length() < 14) { // length of the random string.            int index = (int) (rnd.nextFloat() * SALTCHARS.length());            salt.append(SALTCHARS.charAt(index));        }        String saltStr = salt.toString();        return saltStr;    }}