package kz.altyn.komek.adapters;import android.content.Context;import android.content.Intent;import android.view.View;import android.widget.TextView;import androidx.annotation.NonNull;import androidx.recyclerview.widget.RecyclerView;import com.afollestad.materialdialogs.MaterialDialog;import kz.altyn.komek.R;import kz.altyn.komek.models.Charity;import kz.altyn.komek.models.Package;import kz.altyn.komek.ui.activities.DonateMoney;import kz.altyn.komek.ui.activities.DonatePackage;import kz.altyn.komek.ui.activities.NewDonorReg;import com.bumptech.glide.Glide;import com.bumptech.glide.request.RequestOptions;import de.hdodenhof.circleimageview.CircleImageView;public class CharityViewHolder extends RecyclerView.ViewHolder {    TextView title;    TextView address;    TextView yearOfFoundation;    CircleImageView logo;    String namhe = "";    public CharityViewHolder(@NonNull View itemView) {        super(itemView);        title = itemView.findViewById(R.id.titleCharity);        address = itemView.findViewById(R.id.addressCharity);        yearOfFoundation = itemView.findViewById(R.id.descriptionCharity);        logo = itemView.findViewById(R.id.floatingActionButton3);    }    public void setItem(final Charity charity, final Context context, final Package dd) throws RuntimeException {        title.setText(charity.getTitle());        yearOfFoundation.setText(charity.getYearOfFoundation());        Glide.with(context)                .setDefaultRequestOptions(new RequestOptions().placeholder(R.drawable.ic_flat))                .load(charity.getLogo())                .into(logo);        address.setText(charity.getAddress());        if (dd != null) {            itemView.setOnClickListener(view -> {//                    SqlDonor sqlDonor = new SqlDonor(context);//                    Cursor rs = null;//                    name = null;//                    final String imag = null;//                    rs = sqlDonor.getData(1);//                    rs.moveToFirst();//                    namhe = rs.getString(rs.getColumnIndex(SqlDonor.CONTACTS_COLUMN_NAME));//                    if (!rs.isClosed()) rs.close();                if (namhe != null) {                    context.startActivity(new Intent(context, DonatePackage.class).putExtra("1222", charity).putExtra("donateP", dd).setFlags(Intent.FLAG_ACTIVITY_NEW_TASK));                } else {                    new MaterialDialog.Builder(context)                            .title("You are not registered as a Donor")                            .content("Become a Donor to Donate?")                            .positiveText("Yes")                            .negativeText("No")                            .canceledOnTouchOutside(false)                            .cancelable(false)                            .onPositive((dialog, which) -> context.startActivity(new Intent(context, NewDonorReg.class)))                            .onNegative((dialog1, which) -> {                            })                            .build().show();                }            });        } else {            itemView.setOnClickListener(view -> {                if (namhe != null) {                    context.startActivity(new Intent(context, DonateMoney.class).putExtra("charity", charity).setFlags(Intent.FLAG_ACTIVITY_NEW_TASK));                } else {                    new MaterialDialog.Builder(context)                            .title("You are not registered as a Donor")                            .content("Become a Donor to Donate?")                            .positiveText("Yes")                            .negativeText("No")                            .canceledOnTouchOutside(false)                            .cancelable(false)                            .onPositive((dialog12, which) -> context.startActivity(new Intent(context, NewDonorReg.class)))                            .onNegative((dialog13, which) -> {                            })                            .build().show();                }            });        }    }}